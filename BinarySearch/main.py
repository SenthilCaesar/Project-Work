from BinaryTree import BinaryTree


stack = []
btree = BinaryTree()
btree.add(10)
btree.add(5)
btree.add(3)
btree.add(15)
btree.add(13)
btree.add(17)
btree.add(11)
btree.remove(btree.root, 17)

#btree.remove(btree.root, 13)

print("Inorder Traversal Left---Root---Right")
btree.Inorder(btree.root)
print()
print("Preorder Traversal Root---Left---Right")
btree.Preorder(btree.root)
print()
print("Postorder Traversal Left---Root---Right")
btree.Postorder(btree.root)
print()
print("Level order Traversal Breath First Search")
btree.Levelorder(btree.root)
print("\n")
#btree.remove(btree.root, 7)
print()
print("All Paths")
btree.DFS_allPath(btree.root, stack)
print("\n")
print("Balance values")
btree.Print_balance(btree.root)
#btree.remove(btree.root, 12)
#btree.DFS_allPath(btree.root, stack)
#btree.remove(btree.root, 13)
#btree.DFS_allPath(btree.root, stack)
#btree.remove(btree.root, 14)
#btree.DFS_allPath(btree.root, stack)